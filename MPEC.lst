GAMS 24.9.2  r64480 Released Nov 14, 2017 WEX-WEI x86 64bit/MS Windows 07/08/19 11:06:53 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


      This is the implementation of the MFD based perimeter control considering 
      Instanteneous Dynamic User Equilibrium (DCS part)
      Given the vehicle number, queue length, and demand profiles, this program 
      aims to find the shortest paths and assign the traffic accordingly
      July 26th, Qiangqiang Guo
   6   
   7  * settings and import parameters
   8  option limrow = 300, limcol = 100, solprint = on;
   9   
  10  $include network.gms
****                     $282
  11   
  12  nonnegative variable
  13           f 'cost function',
  14           p_all(i,j,r) 'the link inflow of all vehicles from from link (i,j
****                 $120,120,120
      ) at time instant r',
  15           p_av(i,j,s,r) 'the link inflow of AV with destination s to link (
****                    $120
      i,j) at time instant r',
  16           p_hcv(i,j,s,r) 'the link inflow of HCV with destination s to link
       (i,j) at time instant r',
  17           v_all(i,j,r) 'the link exitflow of all vehicles from from link (i
      ,j) at time instant r',
  18           v_av(i,j,s,r) 'the link exitflow of AV with destination from link
       (i,j) at time instant r',
  19           v_hcv(i,j,s,r) 'the link exitflow of HCV with destination from li
      nk (i,j) at time instant r',
  20           r_prime(i,j,r) 'auxiliary variable to guarantee FIFO',
  21           tau(i,j,r) 'travel time of link(i,j) at time instant r',
  22           eta(i,s,r) 'auxiliary variable for p_hcv at time instant r'
  23           n(i,j,r) 'freeflow vehicle number on link(i,j) at time instant r'
      ,
  24           q(i,j,r) 'queue length on link (i,j) at time instant r'
  25   
  26  equations
  27           cost 'the objective',
  28           ffd(i,j,r) 'free flow dynamics',
  29           pqd(i,j,r) 'point queue dynamics',
  30           ifd(i,j,s,r) 'inflow dynamics total',
  31           efd_total(i,j,r) 'exit flow dynamics total',
  32           efd_av(i,j,s,r) 'AV exit flow dynamics',
  33           efd_hcv(i,j,s,r) 'HCV exit flow dynamics',
  34           fifo(i,j,r) 'fifo time',
  35           rcm(i,j,s,r) 'route choice model',
  36           fcv_av(i,s,r) 'flow conservation for AV',
  37           fcv_hcv(i,s,r) 'flow conservation for HCV';
  38   
  39  cost..                                                           f=e=h*(su
****                                                                       $140 
      m(r,sum(connection(i,j),n(i,j,r)))+sum(r,sum(connection(i,j),q(i,j,r))));
                       $120
  40  ifd(i,j,s,r)$connection(i,j)..                                   p_all(i,j
      ,r) =e= sum(s,p_av(i,j,s,r)) + sum(s,p_hcv(i,j,s,r));
****               $125                   $125
  41  ffd(i,j,r)$connection(i,j)..                                     n(i,j,r+1
      )-n(i,j,r) =e= h*( p_all(i,j,r) - p_all(i,j,r-t_ff(i,j)) );
****                                                   $140
  42  pqd(i,j,r)$connection(i,j)$(q(i,j,r) = 0)..                      q(i,j,r+1
****                            $36        $409
      )-q(i,j,r) =e= h*max(0, p_all(i,j,r-t_ff(i,j))- capacity(i,j) );
  43  pqd(i,j,r)$connection(i,j)$(q(i,j,r) <> 0)..                     q(i,j,r+1
****                            $36              $409
      )-q(i,j,r) =e= h*( p_all(i,j,r-t_ff(i,j))- capacity(i,j) );
  44  fifo(i,j,r)$connection(i,j)..                                    r_prime(i
      ,j,r) + t_ff(i,j) + q(i,j,r_prime(i,j,r)+t_ff(i,j))/capacity(i,j) =e= r;
****                                  $121,148,8,37,409
  45  efd_total(i,j,r)$connection(i,j)$(q(i,j,r) = 0)..                v_all(i,j
****                                  $36        $409
      ,r) =e= h * min( capacity(i,j), p_all(i,j,r-t_ff(i,j)) );
  46  efd_total(i,j,r)$connection(i,j)$(q(i,j,r) <> 0)..               v_all(i,j
****                                  $36              $409
      ,r) =e= h * capacity(i,j);
  47  efd_av(i,j,s,r)$connection(i,j)$(p(i,j,r_prime(i,j,r)) > 0)..    v_av(i,j,
****                                 $36                          $409
      s,r) =e= v_all(i,j,r) * p_av(i,j,s,r_prime(i,j,r))/p_all(i,j,r_prime(i,j,r
      ));
  48  efd_av(i,j,s,r)$connection(i,j)$(p(i,j,r_prime(i,j,r)) = 0)..    v_av(i,j,
****                                 $36                     $409
      s,r) =e= 0;
  49  efd_hcv(i,j,s,r)$connection(i,j)$(p(i,j,r_prime(i,j,r)) > 0)..   v_hcv(i,j
****                                  $36                          $409
      ,s,r) =e= v_all(i,j,r) * p_hcv(i,j,s,r_prime(i,j,r))/p_all(i,j,r_prime(i,j
      ,r));
  50  efd_hcv(i,j,s,r)$connection(i,j)$(p(i,j,r_prime(i,j,r)) = 0)..   v_hcv(i,j
****                                  $36                     $409
      ,s,r) =e= 0;
  51  rcm(i,j,s,r)$connection(i,j)..                                   t_ff(i,j)
       + q(i,j,r)/capacity(i,j) + eta(j,s,r) - eta(i,s,r) =g= 0;
****                     $140          $171
  52  fcv_hcv(i,s,r)..                                                 sum(conne
      ction(i,j), p_hcv(i,j,s,r)) - sum(connection(j,i), v_hcv(j,i,s,r)) - d_hcv
****                                                            $171,171       $
      (i,s,r) =g= 0;
      140
  53  fcv_av(i,s,r)..                                                  sum(conne
      ction(i,j), p_av(i,j,s,r)) - sum(connection(j,i), v_av(j,i,s,r)) - d_av(i,
****                                                          $171,171      $140
      s,r) =g= 0;
  54   
  55  model mtfc / cost, ifd, ffd, pqd, fifo, efd_total, efd_av, efd_hcv, fcv_av
      , rcm.p_hcv, eta.fcv_hcv /;
****                         $142
  56  solve mtfc using mpec min f;
****                            $246,257
  57   
       
       
      include network_19_hexagon_regions_multi_ds_1012.gms
       
      *variables
       
      equations
               p_com(i,j,d) 'the complimentary term of p(i,j,d)',
               eta_com(i,d) 'the complimentary term of eta(i,d)',
               y_com(i,j) 'the complimentary term of y(i,j)',
               lamda_com(i,j) 'the complimentary term of lamda(i,j)',
               mu_com(i,j) 'the complimentary term of mu(i,j)';
       
       
      * the DCS formulation
      p_com(i,j,d)$region_communi(i,j) ..              MFD_Para(j, 'length')*sum
      (d2, n(j,d2))/(MFD_Para(j, 'm3')*power(sum(d2, n(j,d2)),3)+MFD_Para(j, 'm2
      ')*power(sum(d2, n(j,d2)),2)+MFD_Para(j, 'm1')*sum(d2, n(j,d2)) + MFD_Para
      (j, 'm0'))+ sum(d2, q(i,j,d2))/(y(i,j)*(MFD_Para(j, 'n_bar')-sum(d2, n(j,d
      2)))+0.1)+eta(j,d)-eta(i,d) =g= 0;
      eta_com(i,d)..                                   sum(region_communi(i,j), 
      p(i,j,d))-(MFD_Para(i, 'm3')*power(sum(d2, n(i,d2)),3)+MFD_Para(i, 'm2')*p
      ower(sum(d2, n(i,d2)),2)+MFD_Para(i, 'm1')*sum(d2, n(i,d2)) + MFD_Para(i, 
      'm0'))/sum(d2, n(i,d2))*n(i,d)/MFD_Para(i, 'length') =g= 0;
      *eta_com(i,d)..                                   (MFD_Para(i, 'm3')*power
      (sum(d2, n(i,d2)),3)+MFD_Para(i, 'm2')*power(sum(d2, n(i,d2)),2)+MFD_Para(
      i, 'm1')*sum(d2, n(i,d2)) + MFD_Para(i, 'm0'))/sum(d2, n(i,d2))*n(i,d)/MFD
      _Para(i, 'length') - sum(region_communi(i,j), p(i,j,d))=g= 0;
      y_com(i,j)$region_communi(i,j)..                 (lamda(i,j)-mu(i,j)-1)*(M
      FD_Para(j, 'n_bar')-sum(d2, n(j,d2))) =g= 0;
      lamda_com(i,j)$region_communi(i,j)..             u_bar(i,j)-y(i,j)*(MFD_Pa
      ra(j, 'n_bar')-sum(d2, n(j,d2))) =g= 0;
      mu_com(i,j)$region_communi(i,j)..                y(i,j)*(MFD_Para(j, 'n_ba
      r')-sum(d2, n(j,d2))) =g= 0;
       
      eta.fx(i,d)$(sameas(i,d))=0;
       
      * solve the problem
      model mfd / p_com.p, eta_com.eta, y_com.y, lamda_com.lamda, mu_com.mu /;
      solve mfd using mcp
       
      scalar Umodstat, Usolstat,Tmodstat, Tsolstat;
      Umodstat = mfd.Modelstat;
      Usolstat = mfd.solvestat;
GAMS 24.9.2  r64480 Released Nov 14, 2017 WEX-WEI x86 64bit/MS Windows 07/08/19 11:06:53 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


  8  ')' expected
 36  '=' or '..' or ':=' or '$=' operator expected
     rest of statement ignored
 37  '=l=' or '=e=' or '=g=' operator expected
120  Unknown identifier entered as set
121  Set expected
125  Set is under control already
140  Unknown symbol
142  No suffix allowed here - suffix ignored
148  Dimension different - The symbol is referenced with more/less
        indices as declared
171  Domain violation for set
246  Objective variable is not a free variable
257  Solve statement not checked because of previous errors
282  Unable to open include file
409  Unrecognizable item - skip to find a new statement
       looking for a ';' or a key word to get started again

**** 42 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.297 SECONDS      3 MB  24.9.2 r64480 WEX-WEI


USER: Small MUD - 5 User License                     G161020:1349AO-WIN
      University of Washington, Seattle, Civil and EnvironmentalDC12815
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      G:\My Drive\02_Research\06_Mixed flow route choice\Codes\MPEC.gms
Output     C:\Users\guoqq17\Desktop\Codes\MFD_Codes_v4\MPEC.lst

**** USER ERROR(S) ENCOUNTERED
